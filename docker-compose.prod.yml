version: '3.4'

services:
  # https://hub.docker.com/r/ethereum/client-go
  ethereum:
    image: ethereum/client-go:alltools-latest
    ports:
      - 8545:8545
      - 30303:30303
    volumes:
      - ./ethereum/main:/root
    command: geth --rpc --rpcaddr 0.0.0.0 --rpcport 8545 --password /ethereum/main/pass
    restart: on-failure

  chainlink:
    image: smartcontract/chainlink:latest
    ports:
      - 6688:6688
    volumes:
      - ./chainlink:/chainlink
    environment:
      - ROOT=/chainlink
      - LOG_LEVEL=debug
      - ETH_CHAIN_ID=1
      - CHAINLINK_TLS_PORT=0
      - SECURE_COOKIES=false
      - ALLOW_ORIGINS=*
      - ETH_URL=ethereum:8545
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - DATABASE_TIMEOUT=0
    command: local n
    depends_on:
      - ethereum
      - postgres
    restart: on-failure

  postgres:
    image: postgres:alpine
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./postgres/server.crt:/var/lib/postgresql/server.crt
      - ./postgres/server.key:/var/lib/postgresql/server.key
    environment: 
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    command: -c ssl=on -c ssl_cert_file=/var/lib/postgresql/server.crt -c ssl_key_file=/var/lib/postgresql/server.key
    restart: on-failure


networks:
  chaindock:

volumes:
  postgres:
